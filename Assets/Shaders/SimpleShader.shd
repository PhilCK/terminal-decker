
Text Shader
-----------


[VERTEXSHADER]

#version 150 core

// Vertex Format
in vec2 inPosition;
in vec2 inID;

uniform vec2 uniSize;

// Output
out VertexData
{
	vec4 position;
	vec2 size;
	vec2 inID;
} vertexOut;

void main()
{
	vertexOut.position = vec4(inPosition, 0.0, 1.0);
	vertexOut.size = uniSize;
	vertexOut.inID = inID;
}

[/VERTEXSHADER]


[GEOMETRYSHADER]

#version 150

layout (points) in;
layout (triangle_strip, max_vertices = 4) out;

// Input
in VertexData {
	vec4 position;
	vec2 size;
	vec2 inID;
} vertexIn[];

out vec2 tempColor;
out vec2 inID;
out vec2 texC;

uniform sampler2D dataLookup;


void main()
{
	// Generate billboard.
	for(int i = 0; i < 4; i++)
	{
		float row = floor(i / 2.0);
		float col = mod(i, 2.0);

		vec4 offset = vec4((1 - (col * 2)) * vertexIn[0].size.x,
						   (1 - (row * 2)) * vertexIn[0].size.y,
						   0.0,
						   0.0);

		vec4 position = vertexIn[0].position + offset;

		gl_Position = position;

		ivec2 lookup = ivec2(int(inID.x), int(inID.y));
		vec4 info = texelFetch(dataLookup, lookup, 0);

		float u = info.x + (col * info.z);
		float v = info.y + (row * info.w);

		texC = vec2(u, v);

		tempColor = vec2(position.x, position.y);
		inID = vertexIn[0].inID;

		EmitVertex();
	}

	EndPrimitive();
}

[/GEOMETRYSHADER]


[PIXELSHADER]

#version 150

in vec2 tempColor;
in vec2 inID;
in vec2 texC;

// Uniforms
uniform sampler2D fontLookup;

// Output
out vec4 outColor;

void main()
{
	outColor = texture(fontLookup, texC);
	//outColor.w = 1.0;

    //outColor = vec4(texC.x,texC.y,1.0,1.0);
}

[/PIXELSHADER]
